console.log("--------------------------------------");console.log("   NodeJS CodeKit / Web Dev Toolkit   ");console.log("--------------------------------------");console.log("Watching: "+process.cwd());var watchr=require("watchr"),fs=require("fs"),less=require("less"),io=require("socket.io").listen(8080),compressor=require("node-minify");var config={color:true,minify:true,less:true,blacklist:new Array("-min-yui.css","-min-yui.js")};io.set("log level",0);watchr.watch({path:process.cwd(),listener:function(b,c,d,a){pre_process(arguments)},next:function(b,a){if(b){throw b}}});io.sockets.on("connection",function(a){console.log(color("[New Display ["+a.id+"] on Socket.IO]","bold"))});function pre_process(a){var c=a[1].substr(a[1].lastIndexOf("\\")+1);var b=a[1].slice(0,a[1].lastIndexOf("\\"));var e=c.substr(c.lastIndexOf(".")+1);var f=true;for(var d=config.blacklist.length-1;d>=0;d--){if(c.indexOf(config.blacklist[d])!="-1"){f=false}if(d===0&&f===true){event_processor(a,c,b,e)}}}function event_processor(a,c,b,d){switch(a[0]){case"new":console.log(color("--------------------------------------","bold"));console.log(color("A file has been created:","green"));console.log(color("  DIRECTORY  : ","cyan")+b);console.log(color("  FILE       : ","cyan")+c);console.log(color("  EXTENSION  : ","cyan")+d);console.log(color("  SIZE(bytes): ","cyan")+a[2].size);switch(d){default:console.log(color("  * REFRESHING ALL PAGES *","bold"));io.sockets.emit("update",{type:"refresh"});break;case"css":if(!config.minify){console.log(color("  * RELOADING CSS ENTRIES *","bold"));io.sockets.emit("update",{type:"css"})}else{console.log(color("  * COMPRESSING CSS (with YUI) *","bold"));compress_css(b,c)}break;case"less":if(!config.less){console.log(color("  * RELOADING CSS ENTRIES *","bold"));io.sockets.emit("update",{type:"css"})}else{console.log(color("  * COMPILING LESS *","bold"));compile_less(b,c,a[1])}break;case"js":if(!config.minify){console.log(color("  * REFRESHING ALL PAGES *","bold"));io.sockets.emit("update",{type:"refresh"})}else{console.log(color("  * COMPRESSING JAVASCRIPT (with YUI) *","bold"));compress_js(b,c)}}break;case"unlink":console.log(color("--------------------------------------","bold"));console.log(color("A file has been deleted:","red"));console.log(color("  DIRECTORY  : ","cyan")+b);console.log(color("  FILE       : ","cyan")+c);console.log(color("  EXTENSION  : ","cyan")+d);console.log(color("  * REFRESHING ALL PAGES *","bold"));io.sockets.emit("update",{type:"refresh"});break;case"change":console.log(color("--------------------------------------","bold"));console.log(color("A file has been changed:","yellow"));console.log(color("  DIRECTORY  : ","cyan")+b);console.log(color("  FILE       : ","cyan")+c);console.log(color("  EXTENSION  : ","cyan")+d);console.log(color("  SIZE(bytes): ","cyan")+a[3].size);switch(d){default:console.log(color("  * REFRESHING ALL PAGES *","bold"));io.sockets.emit("update",{type:"refresh"});break;case"css":if(!config.minify){console.log(color("  * RELOADING CSS ENTRIES *","bold"));io.sockets.emit("update",{type:"css"})}else{console.log(color("  * COMPRESSING CSS (with YUI) *","bold"));compress_css(b,c)}break;case"less":if(!config.less){console.log(color("  * RELOADING CSS ENTRIES *","bold"));io.sockets.emit("update",{type:"css"})}else{console.log(color("  * COMPILING LESS *","bold"));compile_less(b,c,a[1])}break;case"js":if(!config.minify){console.log(color("  * REFRESHING ALL PAGES *","bold"));io.sockets.emit("update",{type:"refresh"})}else{console.log(color("  * COMPRESSING JAVASCRIPT (with YUI) *","bold"));compress_js(b,c)}}}}function compile_less(b,c,a){fs.readFile(a,"ascii",function d(e,f){if(e){throw e}else{}var g=new (less.Parser)({paths:[b],filename:c});g.parse(f,function(i,h){if(i){return console.log(i)}fs.writeFile(a+".css",h.toCSS({compress:false}),function(j){if(j){throw j}console.log(color("  * COMPILED CSS WRITTEN TO: "+c+".css *","bold"));console.log(color("  * RELOADING CSS ENTRIES *","bold"));io.sockets.emit("update",{type:"css"})})})})}function compress_css(a,b){var d=a+"\\"+b;var c=a+"\\"+d.slice(d.lastIndexOf("\\")+1,d.lastIndexOf(".css"))+"-min-yui.css";new compressor.minify({type:"yui-css",fileIn:d,fileOut:c,callback:function(e){if(e){console.log("CSS Compile Error: "+e)}else{console.log(color("  * CSS COMPILE SUCESSFULL *","bold"));console.log(color("  * RELOADING CSS ENTRIES *","bold"));io.sockets.emit("update",{type:"css"})}}})}function compress_js(a,b){var d=a+"\\"+b;var c=a+"\\"+d.slice(d.lastIndexOf("\\")+1,d.lastIndexOf(".js"))+"-min-yui.js";new compressor.minify({type:"yui-js",fileIn:d,fileOut:c,callback:function(e){if(e){console.log("JS Compile Error: "+e)}else{console.log(color("  * JS COMPILE SUCESSFULL *","bold"));console.log(color("  * REFRESHING ALL PAGES *","bold"));io.sockets.emit("update",{type:"refresh"})}}})}function color(f,b){if(!b){return f}if(!config.color){return f}var d=b.split("+");var e="";for(var c=0,a;a=d[c];c++){e+="\033["+ANSI_CODES[a]+"m"}e+=f+"\033["+ANSI_CODES.off+"m";return e}var ANSI_CODES={off:0,bold:1,italic:3,underline:4,blink:5,inverse:7,hidden:8,black:30,red:31,green:32,yellow:33,blue:34,magenta:35,cyan:36,white:37,black_bg:40,red_bg:41,green_bg:42,yellow_bg:43,blue_bg:44,magenta_bg:45,cyan_bg:46,white_bg:47};